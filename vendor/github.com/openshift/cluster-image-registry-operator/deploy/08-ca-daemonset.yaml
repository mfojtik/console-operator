apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: registry-ca-hostmapper
  namespace: openshift-image-registry
spec:
  selector:
    matchLabels:
      name: registry-ca-hostmapper
  template:
    metadata:
      labels:
        name: registry-ca-hostmapper
    spec:      
      priorityClassName: system-cluster-critical
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      serviceAccountName: registry-ca-hostmapper
      containers:
      - name: registry-ca-hostmapper
        securityContext:
          privileged: true
        image: docker.io/openshift/origin-cluster-image-registry-operator:latest
        command: 
        - "/bin/sh"
        - "-c"
        - |
          if [ ! -e /etc/docker/certs.d/image-registry.openshift-image-registry.svc.cluster.local:5000 ]; then
            mkdir /etc/docker/certs.d/image-registry.openshift-image-registry.svc.cluster.local:5000
          fi
          if [ ! -e /etc/docker/certs.d/image-registry.openshift-image-registry.svc:5000 ]; then
            mkdir /etc/docker/certs.d/image-registry.openshift-image-registry.svc:5000
          fi
          while [ true ];
          do
            if [ -e /tmp/serviceca/service-ca.crt ]; then
              cp -u /tmp/serviceca/service-ca.crt /etc/docker/certs.d/image-registry.openshift-image-registry.svc.cluster.local:5000
              cp -u /tmp/serviceca/service-ca.crt /etc/docker/certs.d/image-registry.openshift-image-registry.svc:5000
            else 
              rm /etc/docker/certs.d/image-registry.openshift-image-registry.svc.cluster.local:5000/service-ca.crt
              rm /etc/docker/certs.d/image-registry.openshift-image-registry.svc:5000/service-ca.crt
            fi
            sleep 60
          done
        volumeMounts:
        - name: serviceca
          mountPath: /tmp/serviceca
        - name: host
          mountPath: /etc/docker/certs.d
      volumes:
      - name: host
        hostPath:
          path: /etc/docker/certs.d
      - name: serviceca
        configMap:
          name: serviceca
          items:
          - key: service-ca.crt
            path: service-ca.crt
